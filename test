- while de list_a
- chaque list_a
- voir ou mettre list_b
- recuperer ma len_b
1
2
3
4
5

1
2
3
2
1
len_a + len_b = tmp_total;

1
2
3 
3
2
1

		if (stack->stack_a[init->i] < stack->stack_b[init->j] && stack->stack_a[init->i] > stack->stack_b[init->j + 1])
		{
			stack->count_move = init->j - len;
		}
        if (stack->size_b % 2 == 0)
            if (init->j == stack->size_b / 2 )
                len++;
		if (init->j > stack->size_b / 2 )
			len += 2;
		init->j++;

        1 1 0
        2 2 0
        3 3 0
        2 4 2
        1 5 4

        (init->j + 1 == stack->size_b + 1 && stack->stack_a[init->i] < stack->stack_b[init->j] 
			&& stack->stack_b[init->j] != stack->stack_b[init->min]
				&& stack->stack_a[init->i] > stack->stack_b[init->j + 1] 
					&& stack->stack_b[init->j + 1] != stack->stack_b[init->max])




		(init->j + 1 != stack->size_a + 1 && stack->stack_b[init->l] < stack->stack_a[init->j]
			&& stack->stack_b[init->l] > stack->stack_a[init->j + 1] 
				&& stack->stack_a[init->j] != stack->stack_a[init->min] 
					&& stack->stack_a[init->j + 1] != stack->stack_a[init->max])

./push_swap 36  45  15  47  29  94  71  58  72  33  22  17  38  62  24  26  99  
4  46  84  81  43  18  98  23  5  20  19  51  67  92  63  69  88  28  42  77  50  91 
 93  79  83  59  49  40  10  39  30  14  57  65  76  85  6  78  16  73  8  80  44  64  
 82  66  1  37  12  35  97  7  75  86  74  11  32  52  90  95  61  60  13  55  34  53  87  27  56  54  100  21  31  48  3  2  89  68  9  41  70  96  25 > a
code a

 105 27 56 114 53 62 147 101 72 82 20 123 59 98 97 64 126 71 107 60 130 40 87 34 102 
 good exemple 


stack_b = 87
stack_b = 53
stack_b = 40
stack_b = 34
stack_b = 27
stack_b = 20
stack_b = 147
stack_b = 130
stack_b = 98
stack_b = 123
stack_b = 114
stack_b = 105
stack_b = 101
stack_b = 82
stack_b = 72
stack_b = 126
stack_b = 71
stack_b = 64
stack_b = 62
stack_b = 60
stack_b = 59
stack_b = 56
